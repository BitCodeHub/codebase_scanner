services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: scanner_user
      POSTGRES_PASSWORD: scanner_password
      POSTGRES_DB: codebase_scanner
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scanner_user"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+asyncpg://scanner_user:scanner_password@postgres:5432/codebase_scanner
      REDIS_URL: redis://redis:6379
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-test-secret-key-change-in-production}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-test-jwt-secret-change-in-production}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID:-test-github-client-id}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET:-test-github-client-secret}
      GITHUB_REDIRECT_URI: ${GITHUB_REDIRECT_URI:-http://localhost:3000/auth/github/callback}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
    volumes:
      - ./backend:/app
      - ./uploads:/uploads
      - ./reports:/reports
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql+asyncpg://scanner_user:scanner_password@postgres:5432/codebase_scanner
      REDIS_URL: redis://redis:6379
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-test-secret-key-change-in-production}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-test-jwt-secret-change-in-production}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID:-test-github-client-id}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET:-test-github-client-secret}
      GITHUB_REDIRECT_URI: ${GITHUB_REDIRECT_URI:-http://localhost:3000/auth/github/callback}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
    volumes:
      - ./backend:/app
      - ./uploads:/uploads
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.services.queue worker --loglevel=info

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      VITE_API_URL: http://localhost:8000
    command: npm run dev -- --host 0.0.0.0

  scanner:
    build:
      context: ./docker/scanner
      dockerfile: Dockerfile
    volumes:
      - /tmp/scans:/scans
    privileged: true
    networks:
      - default

volumes:
  postgres_data:

networks:
  default:
    driver: bridge